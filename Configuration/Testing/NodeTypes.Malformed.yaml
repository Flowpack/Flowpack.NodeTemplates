'Flowpack.NodeTemplates:Content.WithEvaluationExceptions':
  superTypes:
    'Neos.Neos:ContentCollection': true
  ui:
    label: "WithEvaluationExceptions"
  properties:
    working:
      type: string
  options:
    template:
      properties:
        foo: "${cannotCallThis()}"
        working: "working"
        bar: "${'left open"
      childNodes:
        whenAbort:
          type: 'Flowpack.NodeTemplates:Content.Text'
          when: "${parse äüäö error}"
        working:
          type: 'Flowpack.NodeTemplates:Content.Text'
          properties:
            text: bar
        illegalNodeAbort:
          type: 'Neos.Neos:Document'
          name: 'illegal'
          properties:
            text: huhu
        withContextAbort:
          type: 'Flowpack.NodeTemplates:Content.Text'
          withContext:
            foo: "${0 + []}"
        withItemsAbort:
          type: 'Flowpack.NodeTemplates:Content.Text'
          withItems: "${Array.map()}"
        propertiesPartiallyWorking:
          type: 'Flowpack.NodeTemplates:Content.Text'
          properties:
            propertyIsExcludedFromTemplate: "${"
            text: "123"
        typeAbort:
          type: "${"
        nameAbort:
          name: "${"
        withItemsPartiallyWorking:
          type: 'Flowpack.NodeTemplates:Content.Text'
          withItems: [1, 2]
          name: "${item == 1 ? cannotCallThis() : null}"
          properties:
            text: "foo"
